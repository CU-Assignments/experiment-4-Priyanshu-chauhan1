class Employee {
    private int id;
    private String name;
    private double salary;
    
    public Employee(int id, String name, double salary) {
        this.id = id;
        this.name = name;
        this.salary = salary;
    }
    
    public int getId() { return id; }
    public String getName() { return name; }
    public double getSalary() { return salary; }
    public void setSalary(double salary) { this.salary = salary; }
    
    @Override
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Salary: " + salary;
    }
}

class EmployeeManagement {
    public static void main(String[] args) {
        java.util.ArrayList<Employee> employees = new java.util.ArrayList<>();
        java.util.Scanner scanner = new java.util.Scanner(System.in);
        
        while (true) {
            System.out.println("\n1. Add  2. Update  3. Remove  4. Search  5. Display All  6. Exit");
            System.out.print("Choose option: ");
            int choice = scanner.nextInt();
            
            switch (choice) {
                case 1: // Add
                    System.out.print("Enter ID: ");
                    int id = scanner.nextInt();
                    scanner.nextLine();
                    System.out.print("Enter Name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter Salary: ");
                    double salary = scanner.nextDouble();
                    employees.add(new Employee(id, name, salary));
                    System.out.println("Employee added successfully");
                    break;
                    
                case 2: // Update
                    System.out.print("Enter ID to update: ");
                    int updateId = scanner.nextInt();
                    for (Employee emp : employees) {
                        if (emp.getId() == updateId) {
                            System.out.print("Enter new salary: ");
                            double newSalary = scanner.nextDouble();
                            emp.setSalary(newSalary);
                            System.out.println("Updated successfully");
                            break;
                        }
                    }
                    break;
                    
                case 3: // Remove
                    System.out.print("Enter ID to remove: ");
                    int removeId = scanner.nextInt();
                    employees.removeIf(emp -> emp.getId() == removeId);
                    System.out.println("Removed successfully");
                    break;
                    
                case 4: // Search
                    System.out.print("Enter ID to search: ");
                    int searchId = scanner.nextInt();
                    for (Employee emp : employees) {
                        if (emp.getId() == searchId) {
                            System.out.println(emp);
                            break;
                        }
                    }
                    break;
                    
                case 5: // Display All
                    for (Employee emp : employees) {
                        System.out.println(emp);
                    }
                    break;
                    
                case 6: // Exit
                    scanner.close();
                    return;
            }
        }
    }
}
